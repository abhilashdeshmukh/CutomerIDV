<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">



	<context:component-scan base-package="com.*" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" 
		/> -->

	<!-- <mvc:resources mapping="/images/**" location="/WEB-INF/images/"/> <mvc:resources 
		mapping="/styles/**" location="/WEB-INF/styles/" /> <mvc:resources mapping="/js/**" 
		location="WEB-INF/js/" /> -->

	<!--Define FlowHandlerMapping to tell DispatcherServlet (in web.xml) to 
		send flow requests to Spring Web Flow -->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
		<property name="flowRegistry" ref="registrationFlowRegistry" />
	</bean>

	<!-- Define FlowHandlerAdapter to handle Spring Web Flow request call. This 
		is the Controller class in Spring Web Flow -->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
		<property name="flowExecutor" ref="registrationFlowExecutor" />
	</bean>


	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- <property name="basename" value="classpath:message" /> -->
		<property name="defaultEncoding" value="UTF-8" />
	</bean>


	<!-- JPA entity manager for container managed persistence -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation" value="classpath:persistence.xml" />
		<property name="persistenceUnitName" value="userPersistenceUnit" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="jpaDialect" ref="jpaDialect" />
	</bean>


	<!-- JPA Adapter for Hibernate -->
	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="HSQL" />
		<property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect" />
	</bean>
	<!-- JPA dialect for Hibernate -->
	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />

	<!-- Transaction manager to be used for JPA persistence -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaDialect" ref="jpaDialect" />
	</bean>
	<!-- Spring to use annotation driven transaction management Transaction 
		manager to be used for JPA persistence -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- database parameters defined for dataSource bean -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:file:c:\\test\\userDb" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>
	<!-- initializes the database by creating the PERSON table with ID, NAME 
		and EMAIL columns -->

	<bean id="dbUtil" class="com.accenture.CustomerIDV.factory.DBFactory"
		init-method="initialize">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>   